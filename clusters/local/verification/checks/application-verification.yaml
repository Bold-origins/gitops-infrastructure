apiVersion: batch/v1
kind: CronJob
metadata:
  name: application-verification
  namespace: verification
  labels:
    app.kubernetes.io/part-of: gitops-verification
    app.kubernetes.io/managed-by: flux
spec:
  schedule: "*/15 * * * *"  # Run every 15 minutes
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: gitops-verification
        spec:
          serviceAccountName: verification-sa
          containers:
          - name: verify
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - -c
            - |
              echo "Starting application verification checks..."
              
              # Check Supabase
              echo "Checking Supabase..."
              if kubectl wait --for=condition=Ready --timeout=30s -n supabase pods -l app=supabase-db > /dev/null 2>&1; then
                echo "Supabase is healthy"
                kubectl create configmap supabase-status --from-literal=status=healthy --from-literal=timestamp="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" -o yaml --dry-run=client | kubectl apply -f -
              else
                echo "Supabase is unhealthy"
                kubectl create configmap supabase-status --from-literal=status=unhealthy --from-literal=timestamp="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" -o yaml --dry-run=client | kubectl apply -f -
              fi
              
              # Check HelmRelease status for Supabase
              echo "Checking Supabase HelmRelease..."
              if kubectl get helmrelease -n supabase supabase -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}' | grep "True" > /dev/null 2>&1; then
                echo "Supabase HelmRelease is healthy"
                kubectl create configmap supabase-helmrelease-status --from-literal=status=healthy --from-literal=timestamp="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" -o yaml --dry-run=client | kubectl apply -f -
              else
                echo "Supabase HelmRelease is unhealthy"
                kubectl create configmap supabase-helmrelease-status --from-literal=status=unhealthy --from-literal=timestamp="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" -o yaml --dry-run=client | kubectl apply -f -
              fi
              
              # Additional application checks can be added here
              # For example:
              # - Check if application endpoints are responding
              # - Check if application integrations are working
              # - Check if application databases are accessible
              
              echo "Application verification completed."
          restartPolicy: OnFailure
