secret:
  existingSecret: supabase-jwt
  existingSecretKeys:
    anonKey: anonKey
    serviceKey: serviceKey
    jwtSecret: jwtSecret

  smtp:
    existingSecret: supabase-smtp
    existingSecretKeys:
      username: username
      password: password
  
  dashboard:
    existingSecret: supabase-dashboard
    existingSecretKeys:
      username: username
      password: password
  
  db:
    existingSecret: supabase-db
    existingSecretKeys:
      username: username
      password: password
      database: database
      password_encoded: password_encoded
  
  analytics:
    existingSecret: supabase-analytics
    existingSecretKeys:
      apiKey: apiKey
  
  s3:
    existingSecret: supabase-s3
    existingSecretKeys:
      keyId: keyId
      accessKey: accessKey

db:
  enabled: true
  image:
    tag: 15.1.0.147
  livenessProbe:
    exec:
      command:
        - pg_isready
        - -U
        - postgres
    initialDelaySeconds: 3
  persistence:
    enabled: false

studio:
  image:
    tag: 20240326-5e5586d
  environment:
    STUDIO_DEFAULT_ORGANIZATION: "My Organization"
    STUDIO_DEFAULT_PROJECT: "My Project"
    SUPABASE_PUBLIC_URL: http://supabase.local/
    NEXT_PUBLIC_ENABLE_LOGS: "true"
  livenessProbe:
    httpGet:
      path: /api/profile
      port: 3000
    initialDelaySeconds: 3

auth:
  image:
    tag: v2.143.0
  environment:
    API_EXTERNAL_URL: http://supabase.local
    GOTRUE_SITE_URL: http://supabase.local
    GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
    GOTRUE_MAILER_AUTOCONFIRM: "true"
    GOTRUE_SMTP_ADMIN_EMAIL: "your-mail@example.com"
    GOTRUE_SMTP_HOST: "smtp.example.com"
    GOTRUE_SMTP_PORT: "587"
    GOTRUE_SMTP_SENDER_NAME: "your-mail@example.com"

rest:
  image:
    tag: v12.0.1

realtime:
  image:
    tag: v2.27.5
  livenessProbe:
    httpGet:
      path: /
      port: 4000
    initialDelaySeconds: 3

meta:
  image:
    tag: v0.80.0

storage:
  image:
    tag: v0.46.4
  livenessProbe:
    httpGet:
      path: /status
      port: 5000
    initialDelaySeconds: 3
  persistence:
    enabled: false
  # Use MinIO service from our cluster
  environment:
    STORAGE_BACKEND: s3
    GLOBAL_S3_PROTOCOL: http
    GLOBAL_S3_ENDPOINT: http://minio.minio.svc.cluster.local:9000
    GLOBAL_S3_FORCE_PATH_STYLE: true
    AWS_DEFAULT_REGION: stub

imgproxy:
  image:
    tag: v3.8.0
  environment:
    IMGPROXY_ENABLE_WEBP_DETECTION: "true"
  livenessProbe:
    exec:
      command:
        - imgproxy
        - health
    initialDelaySeconds: 3
  persistence:
    enabled: false

kong:
  image:
    repository: kong
    tag: 2.8.1
  environment:
    KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
    KONG_LOG_LEVEL: info
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
    tls: []
    hosts:
      - host: supabase.local
        paths:
          - path: /
            pathType: Prefix

analytics:
  enabled: false

vector:
  image:
    tag: 0.34.0-alpine
  livenessProbe:
    httpGet:
      path: /health
      port: 9001
    initialDelaySeconds: 3
  volumeMounts:
    - name: pod-logs
      mountPath: /var/log/pods
  volumes:
    - name: pod-logs
      hostPath:
        path: /var/log/pods

functions:
  image:
    tag: v1.41.2 