# Production Environment Configuration for NGINX Ingress
controller:
  # Use LoadBalancer for production environment
  service:
    type: LoadBalancer
    # Production-specific LoadBalancer annotations if needed
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
  
  # Higher resources for production environment
  resources:
    limits:
      cpu: 2000m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 256Mi
  
  # Three replicas for production HA
  replicaCount: 3
  
  # Production security configuration
  config:
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
    use-forwarded-headers: "true"
    enable-real-ip: "true"
    proxy-buffer-size: "16k"
    proxy-body-size: "50m"
    server-tokens: "false"
    hsts: "true"
    hsts-include-subdomains: "true"
    hsts-max-age: "31536000"
  
  # Production arguments including SSL certificate
  extraArgs:
    default-ssl-certificate: "cert-manager/wildcard-tls"
  
  # Production annotations for monitoring, alerts, and backups
  podAnnotations:
    environment: "production"
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    alert-tier: "critical"
    backup.velero/include: "true"
  
  # Enable metrics with service monitor for production monitoring
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
      namespace: monitoring
      scrapeInterval: 30s

# Enable default backend in production
defaultBackend:
  enabled: true
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 20m
      memory: 64Mi
  
  # Default backend service annotations
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "10254"

# Tolerations to ensure ingress runs on specific nodes
tolerations:
  - key: "ingress-node"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

# Node affinity for production placement
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/role
          operator: In
          values:
          - ingress 