# Production Environment Configuration for MinIO
# High availability setup with distributed mode

# Deployment mode - distributed for production HA
mode: distributed
zones: 2
drivesPerNode: 4
replicas: 4

# Production-grade resources 
resources:
  requests:
    memory: "2Gi"
    cpu: "500m"
  limits:
    memory: "4Gi"
    cpu: "1000m"

# Large persistence for production workloads
persistence:
  enabled: true
  size: 100Gi
  # Use high-performance storage class for production
  storageClass: "premium-rwo"

# Production service configuration
service:
  type: ClusterIP

# Production-specific ingress configuration with TLS
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  hosts:
    - minio.example.com
  tls:
    - secretName: minio-prod-tls
      hosts:
        - minio.example.com

# Console configuration for production
console:
  enabled: true
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - minio-console.example.com
    tls:
      - secretName: minio-console-prod-tls
        hosts:
          - minio-console.example.com

# Enable comprehensive metrics for production
metrics:
  serviceMonitor:
    enabled: true
    additionalLabels:
      release: prometheus
    namespace: monitoring
    interval: 30s

# Production-tuned health checks
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 15

# Strict network policy for production
networkPolicy:
  enabled: true
  allowExternal: true

# Production pod security context
securityContext:
  enabled: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Production pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9000"
  backup.velero/include: "true"
  alert-tier: "critical"

# Pod Disruption Budget for HA
pdb:
  enabled: true
  minAvailable: 3

# Priority class for production
priorityClassName: "high-priority"

# Anti-affinity for HA
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - minio
        topologyKey: "kubernetes.io/hostname" 