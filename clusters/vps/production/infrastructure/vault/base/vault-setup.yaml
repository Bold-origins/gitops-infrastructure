apiVersion: batch/v1
kind: Job
metadata:
  name: vault-setup
  namespace: vault
  annotations:
    # This ensures the job is recreated when config changes
    kustomize.toolkit.fluxcd.io/prune: "true"
spec:
  backoffLimit: 5
  template:
    spec:
      serviceAccountName: vault-setup
      restartPolicy: OnFailure
      containers:
      - name: vault-setup
        image: hashicorp/vault:1.12.1
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          echo "Waiting for Vault to be ready..."
          until vault status -address=http://vault:8200; do
            sleep 5
          done
          
          # Configure Kubernetes authentication
          echo "Configuring Kubernetes authentication..."
          export VAULT_ADDR=http://vault:8200
          export VAULT_TOKEN=root  # Using root token in dev mode
          
          # Enable Kubernetes auth method
          vault auth enable kubernetes
          
          # Configure Kubernetes auth method with service account token
          vault write auth/kubernetes/config \
            kubernetes_host="https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT" \
            disable_local_ca_jwt="true"
          
          # Create a policy for applications
          vault policy write app-policy -<<EOF
          path "secret/data/*" {
            capabilities = ["read"]
          }
          EOF
          
          # Create a role for applications
          vault write auth/kubernetes/role/app-role \
            bound_service_account_names="*" \
            bound_service_account_namespaces="*" \
            policies="app-policy" \
            ttl="1h"
          
          # Enable the KV secrets engine
          vault secrets enable -version=2 kv
          
          # Create example secrets for testing
          vault kv put kv/database/config username="db-user" password="db-password"
          vault kv put kv/api/keys api_key="my-api-key" api_secret="my-api-secret"
          
          echo "Vault setup completed!"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-setup
  namespace: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-setup
subjects:
- kind: ServiceAccount
  name: vault-setup
  namespace: vault
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io 